{"mappings":"AAAA,MAAMA,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,aAAcF,SAASC,cAAc,uBACrCE,YAAaH,SAASC,cAAc,sBACpCG,cAAeJ,SAASC,cAAc,wBACtCI,YAAaL,SAASC,cAAc,0BAgBtC,SAASK,EAAcC,EAAUC,GAG/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAxBbV,EAAKO,YAAYU,iBAAiB,UAElC,SAAsBC,GACpB,MAAMC,EAAaC,OAAOpB,EAAKI,cACzBM,EAAQU,OAAOpB,EAAKK,aAC1BS,YAAW,KACT,MAAMO,EAAYD,OAAOpB,EAAKM,eAC9B,IAAK,IAAIG,EAAW,EAAGA,GAAYY,EAAWZ,GAAY,EACxDD,EAAcC,EAAUC,EAAM,GAE/BS,E,IAkBLX,EAAcC,SAAUC,OACrBY,MAAK,EAACb,SAAEA,EAAQC,MAAEA,MACjBa,QAAQC,IAAI,uBAAqBf,QAAiBC,OAQtD,SAAmBD,EAAUC,GAC3B,MAAMe,EAAS,iDAA+ChB,QAAiBC,UAC7EV,EAAGC,OAAOyB,mBAAmB,YAAaD,E,CATxCE,CAAQ,C,SAAElB,E,MAAUC,GAAQ,IAE/BkB,OAAM,EAACnB,SAAEA,EAAQC,MAAEA,MAClBa,QAAQC,IAAI,sBAAoBf,QAAiBC,OASrD,SAAkBD,EAAUC,GAC1B,MAAMe,EAAS,+CAA6ChB,QAAeC,UAC3EV,EAAKC,OAAOyB,mBAAmB,YAAaD,E,CAVxCI,CAAO,C,SAAEpB,E,MAAUC,GAAQ","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  formEl: document.querySelector('.form'),\n  delayInputEl: document.querySelector('input[name=\"delay\"]'),\n  stepInputEl: document.querySelector('input[name=\"step\"]'),\n  amountInputEl: document.querySelector('input[name=\"amount\"]'),\n  submitBtnEl: document.querySelector('button[type=\"submit\"]'),\n};\n\nrefs.submitBtnEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  const firstDelay = Number(refs.delayInputEl);\n  const delay = Number(refs.stepInputEl);\n  setTimeout(() => {\n    const positions = Number(refs.amountInputEl);\n    for (let position = 1; position <= positions; position += 1) {\n      createPromise(position, delay);\n    }\n  }, firstDelay);\n}\n\nfunction createPromise(position, delay) {\n  // delay = Number(refs.stepInputEl);\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ncreatePromise(position, delay)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    fulfilled({ position, delay });\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    rejected({ position, delay });\n  });\n\nfunction fulfilled(position, delay) {\n  const string = `<p class=\"fulfilled-text\">✅ Fulfilled promise ${position} in ${delay}ms</p>`;\n  refs.formEl.insertAdjacentHTML('beforeend', string);\n}\n\nfunction rejected(position, delay) {\n  const string = `<p class=\"rejected-text\">❌ Rejected promise ${position} in ${delay}ms</p>`;\n  refs.formEl.insertAdjacentHTML('beforeend', string);\n}\n"],"names":["$47d4ff9957288465$var$refs","formEl","document","querySelector","delayInputEl","stepInputEl","amountInputEl","submitBtnEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","firstDelay","Number","positions","then","console","log","string","insertAdjacentHTML","$47d4ff9957288465$var$fulfilled","catch","$47d4ff9957288465$var$rejected"],"version":3,"file":"03-promises.1c2101d7.js.map"}