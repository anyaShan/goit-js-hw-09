{"mappings":"YAAA,IA4DQA,EA5DFC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,YAAaF,SAASC,cAAc,0BAQtC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAkDP,SAASQ,EAAUC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MACvBU,EAAS,gEAAiFC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,WACpGP,EAAGD,eAAeoB,mBAAmB,YAAaF,E,CAGtD,SAASG,EAASJ,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MACtBU,EAAS,8DAA6EC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,WAClGP,EAAKD,eAAeoB,mBAAmB,YAAaF,E,CAxEzCf,SAASmB,KACjBC,UAAY,YAEjBtB,EAAKC,OAAOsB,iBAAiB,UAkB7B,SAAsBC,GACpBA,EAAMC,iBACN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALnB,MAAOuB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAGvBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAASF,OAAOH,EAAKI,OACrBE,EAAWH,OAAOF,EAAOG,OAE7B,GAAIF,EAAa,GAAKG,EAAS,GAAKC,EAAW,EAE7C,YADAC,MAAM,iCAIRC,QAAQC,IAAIP,EAAYG,EAAQC,GA0BxBpC,EAAKD,eAAeyC,UAAY,GAtBxC,IAAK,IAAIC,EAAW,EAAGA,GAAYL,EAAUK,GAAY,EACvDpC,EAAcoC,EAAUT,GACrBU,MAAK,SAAA1B,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MACjB+B,QAAQC,IAAI,uBAAwCrB,OAAfZ,EAAS,QAAYY,OAANX,EAAM,OACxDQ,EAAQ,CAAET,WAAUC,S,IAEvBoC,OAAM,SAAA3B,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MAClB+B,QAAQC,IAAI,sBAAuCrB,OAAfZ,EAAS,QAAYY,OAANX,EAAM,OACvDa,EAAO,CAAEd,WAAUC,S,IAEzByB,GAAcG,C,KAKVpC,EAAiBG,SAAS0C,cAAc,OAC/BtB,UAAY,gBAC3BtB,EAAKC,OAAO4C,MAAM9C,GACVC,EAAKD,eAAiBG,SAASC,cAAc,iB","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  formEl: document.querySelector('.form'),\n  submitBtnEl: document.querySelector('button[type=\"submit\"]'),\n};\n\nconst body = document.body;\nbody.classList = 'container';\n\nrefs.formEl.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ncreatListOfPromises();\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let firstDelay = Number(delay.value);\n  let stepEl = Number(step.value);\n  let amountEl = Number(amount.value);\n\n  if (firstDelay < 0 || stepEl < 0 || amountEl < 0) {\n    alert('Enter a number greater than 0');\n    return;\n  }\n\n  console.log(firstDelay, stepEl, amountEl);\n\n  cleanListOfPromises();\n\n  for (let position = 1; position <= amountEl; position += 1) {\n    createPromise(position, firstDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        fulfilled({ position, delay });\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        rejected({ position, delay });\n      });\n    firstDelay += stepEl;\n  }\n}\n\nfunction creatListOfPromises() {\n  const listOfPromises = document.createElement('ul');\n  listOfPromises.classList = 'promises-list';\n  refs.formEl.after(listOfPromises);\n  return (refs.listOfPromises = document.querySelector('.promises-list'));\n}\n\nfunction cleanListOfPromises() {\n  return (refs.listOfPromises.innerHTML = '');\n}\n\nfunction fulfilled({ position, delay }) {\n  const string = `<li class=\"promises-item fulfilled-text\">✅ Fulfilled promise ${position} in ${delay}ms</li>`;\n  refs.listOfPromises.insertAdjacentHTML('beforeend', string);\n}\n\nfunction rejected({ position, delay }) {\n  const string = `<li class=\"promises-item rejected-text\">❌ Rejected promise ${position} in ${delay}ms</li>`;\n  refs.listOfPromises.insertAdjacentHTML('beforeend', string);\n}\n"],"names":["listOfPromises","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","submitBtnEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$fulfilled","param","string","concat","insertAdjacentHTML","$ce04d3a99e08e73b$var$rejected","body","classList","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","firstDelay","Number","value","stepEl","amountEl","alert","console","log","innerHTML","position1","then","catch","createElement","after"],"version":3,"file":"03-promises.85fd8c79.js.map"}